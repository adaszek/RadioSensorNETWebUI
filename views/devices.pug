extends layout.pug

block append styles
    link(rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap.min.css")

block append scripts
    script(type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js")
    script(type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.13/js/dataTables.bootstrap.min.js")
    script(src="/socket.io/socket.io.js")

block content
    script.
        $(document).ready(() => {
            var table = $("#table1").DataTable({
                "ajax": "/devices/api",
                "createdRow": (row, data, index) => {
                    if (data[1] !== "unknown") {
                        $("td", row).eq(1).empty();
                        var div = $("<div class=\"btn-group\" role=\"group\" aria-label=\"...\" />").appendTo($("td", row).eq(1));
                        if (data[1]["r"] !== 0) {
                            var reads_abr = data[1]["r"].split(",");
                            var reads = [];
                            //TODO: make it dynamic - read from DB
                            for (var i in reads_abr) {
                                switch(reads_abr[i]) {
                                    case "t":
                                        reads.push("temperature");
                                        break;
                                    case "h":
                                        reads.push("humidity");
                                        break;
                                    case "v":
                                        reads.push("voltage");
                                        break;
                                    default:
                                        break;
                                }
                            }

                            for (var i in reads) {
                                div.append("<a role=\"button\" class=\"btn btn-success\" href=\"/device/" + data[0] + "/" + reads[i] + "\">" + reads[i] + "</a>");
                            }
                        }

                        //TODO: should be !== - it's just workaround
                        if (data[1]["w"] == 0) {
                            //var writes_abr = data[1]["w"].split(",");
                            var writes_abr = ["s"];
                            var writes = [];
                            //TODO: make it dynamic - read from DB
                            for (var i in writes_abr) {
                                switch(writes_abr[i]) {
                                    case "s":
                                        writes.push("switch");
                                        break;
                                    default:
                                        break;
                                }
                            }

                            for (var i in writes) {
                                div.append("<a role=\"button\" class=\"btn btn-info\" href=\"/device/" + data[0] + "/" + writes[i] + "\">" + writes[i] + "</a>");
                            }
                        }
                    }
                }
            });
            
            //table.rows().invalidate().draw();
        });
    .row
        .col-md-12
            table(id="table1" class="table table-hover table-bordered" width="100%" cellspacing="0")
                thead
                    tr
                        td Device ID
                        td Provided functions
                        td Location
